{"trial_id": "05", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "num_layers", "default": null, "conditions": [], "min_value": 1, "max_value": 3, "step": 1, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "filters_0", "default": 32, "conditions": [], "values": [32, 64, 128], "ordered": true}}, {"class_name": "Choice", "config": {"name": "kernel_size_0", "default": 3, "conditions": [], "values": [3, 4, 5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "strides_0", "default": 1, "conditions": [], "values": [1, 2], "ordered": true}}, {"class_name": "Choice", "config": {"name": "pool_size_0", "default": 2, "conditions": [], "values": [2, 3], "ordered": true}}, {"class_name": "Choice", "config": {"name": "activation_0", "default": "relu", "conditions": [], "values": ["relu", "tanh"], "ordered": false}}, {"class_name": "Int", "config": {"name": "dense_units", "default": null, "conditions": [], "min_value": 32, "max_value": 128, "step": 32, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "learning_rate", "default": 0.0001, "conditions": [], "min_value": 0.0001, "max_value": 0.01, "step": null, "sampling": "log"}}, {"class_name": "Choice", "config": {"name": "filters_1", "default": 32, "conditions": [], "values": [32, 64, 128], "ordered": true}}, {"class_name": "Choice", "config": {"name": "kernel_size_1", "default": 3, "conditions": [], "values": [3, 4, 5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "strides_1", "default": 1, "conditions": [], "values": [1, 2], "ordered": true}}, {"class_name": "Choice", "config": {"name": "pool_size_1", "default": 2, "conditions": [], "values": [2, 3], "ordered": true}}, {"class_name": "Choice", "config": {"name": "activation_1", "default": "relu", "conditions": [], "values": ["relu", "tanh"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "filters_2", "default": 32, "conditions": [], "values": [32, 64, 128], "ordered": true}}, {"class_name": "Choice", "config": {"name": "kernel_size_2", "default": 3, "conditions": [], "values": [3, 4, 5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "strides_2", "default": 1, "conditions": [], "values": [1, 2], "ordered": true}}, {"class_name": "Choice", "config": {"name": "pool_size_2", "default": 2, "conditions": [], "values": [2, 3], "ordered": true}}, {"class_name": "Choice", "config": {"name": "activation_2", "default": "relu", "conditions": [], "values": ["relu", "tanh"], "ordered": false}}], "values": {"num_layers": 3, "filters_0": 128, "kernel_size_0": 4, "strides_0": 2, "pool_size_0": 3, "activation_0": "tanh", "dense_units": 32, "learning_rate": 0.002850700565738323, "filters_1": 128, "kernel_size_1": 5, "strides_1": 2, "pool_size_1": 3, "activation_1": "tanh", "filters_2": 32, "kernel_size_2": 5, "strides_2": 2, "pool_size_2": 2, "activation_2": "tanh"}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"c:\\Users\\rsore\\anaconda3\\envs\\TX_prediction\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\rsore\\anaconda3\\envs\\TX_prediction\\Lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\rsore\\anaconda3\\envs\\TX_prediction\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\rsore\\anaconda3\\envs\\TX_prediction\\Lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\rsore\\anaconda3\\envs\\TX_prediction\\Lib\\site-packages\\keras_tuner\\src\\engine\\hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"c:\\Users\\rsore\\anaconda3\\envs\\TX_prediction\\Lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 122, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"c:\\Users\\rsore\\anaconda3\\envs\\TX_prediction\\Lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 124, in error_handler\n    del filtered_tb\n        ^^^^^^^^^^^\nValueError: Exception encountered when calling Conv1D.call().\n\n\u001b[1mNegative dimension size caused by subtracting 5 from 3 for '{{node sequential_1/conv1d_2_1/convolution}} = Conv2D[T=DT_FLOAT, data_format=\"NHWC\", dilations=[1, 1, 1, 1], explicit_paddings=[], padding=\"VALID\", strides=[1, 1, 2, 1], use_cudnn_on_gpu=true](sequential_1/conv1d_2_1/convolution/ExpandDims, sequential_1/conv1d_2_1/convolution/ExpandDims_1)' with input shapes: [?,1,3,128], [1,5,128,32].\u001b[0m\n\nArguments received by Conv1D.call():\n  \u2022 inputs=tf.Tensor(shape=(None, 3, 128), dtype=float32)\n"}